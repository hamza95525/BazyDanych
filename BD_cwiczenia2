pg_dump -U postgres s298278 > s298278.bak;
dropdb -U postgres s298278;
createdb -U postgres s298278_backup;
psql -U postgres s298278_backup < s298278.bak;
ALTER DATABASE s298278_backup RENAME TO s298278;

INSERT INTO producenci(id_producenta, nazwa_producenta, mail, telefon)
VALUES
(1, 'Woda', 'woda@woda.com', '123123123'),
(2, 'Nie woda', 'niewoda@gm.pl', '123123226'),
(3, 'Soczek', 'soczek@gm.pl', '123321321'),
(4, 'Mysz', 'mysz@gmail.com', '212231123');


INSERT INTO produkty(id_produktu, nazwa_produktu, cena, producenci_id_producenta)
VALUES
(1, 'Woda', 1.50, 1),
(2, 'Slodzona Woda', 1.80, 1),
(3, 'Solona woda', 1.90, 1),
(4, 'Goraca woda', 2.50, 1),
(5, 'Nie woda', 1.8.00, 2),
(6, 'Nie goraca woda', 2.00, 2),
(7, 'Cola', 10.00, 3),
(8, 'Pepsi', 39.99, 3),
(9, 'Fanta', 19.99, 3),
(10, 'Chomik', 1.00, 4),
(11, 'Szczur', 1.30, 4),
(12, 'Wiewiorka', 0.85, 4);

INSERT INTO zamowienia(id_zamowienia, ilosc, data, produkty_id_produktu)
VALUES
(1,  760,  '2020-01-12',  1),
(2,  920,  '2020-01-27',  1),
(3,  400,  '2020-01-29',  1),
(4,  200,  '2020-02-07',  2),
(5,  220,  '2020-02-07',  2),
(6,  1400, '2020-03-12',  4),
(7,  540,  '2020-03-12',  4),
(8,  2,    '2020-03-14',  5),
(9,  1,    '2020-03-14',  6),
(10, 6000, '2020-03-14',  7),
(11, 35,   '2020-05-01',  7),
(12, 54,   '2020-05-02',  7),
(13, 200,  '2020-05-20',  7),
(14, 50,   '2020-06-09',  8),
(15, 20,   '2020-07-30',  9),
(16, 12,   '2020-08-15',  9),
(17, 3000, '2020-08-16', 10),
(18, 2550, '2020-08-20', 10),
(19, 1200, '2020-09-13', 10),
(20, 80,   '2020-09-22', 11);

11.
SELECT CONCAT('Producent: ', nazwa_producenta, ', liczba zamowien: ', SUM(ilosc), ', wartosc zamowienia: ', SUM(ilosc*cena)) FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu RIGHT JOIN producenci ON id_producenta = producenci_id_producenta GROUP BY id_producenta;
SELECT CONCAT('Produkt: ', nazwa_produktu, ', liczba zamowien: ', COUNT(id_zamowienia)) FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY nazwa_produktu;
SELECT * FROM zamowienia NATURAL JOIN produkty;
SELECT * FROM zamowienia WHERE DATE_PART('month', data) = 1;
SELECT count(id_zamowienia), DATE_PART('dow', data) as dzien_tygodnia FROM zamowienia GROUP BY dzien_tygodnia;
SELECT SUM(ilosc*cena) AS sprzedaz, DATE_PART('dow', data) AS dzien_tygodnia FROM zamowienia JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY dzien_tygodnia ORDER BY sprzedaz DESC;
SELECT nazwa_produktu, COUNT(id_zamowienia) AS ilosc_zamowien FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY id_produktu ORDER BY ilosc_zamowien DESC;


12.
SELECT CONCAT('Produkt ', UPPER(nazwa_produktu), ', ktorego producentem jest ', LOWER(nazwa_producenta), ', zamowiono ', COUNT(id_zamowienia), ' razy.') AS opis FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu JOIN producenci ON id_producenta = producenci_id_producenta GROUP BY nazwa_produktu, nazwa_producenta ORDER BY COUNT(id_zamowienia) DESC;
SELECT zamowienia.*, produkty.*, SUM(cena*ilosc) FROM zamowienia JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY id_zamowienia, id_produktu ORDER BY SUM(ilosc*cena) DESC LIMIT (SELECT COUNT(*) FROM zamowienia) - 3;
CREATE TABLE klienci(id_klienta SERIAL PRIMARY KEY, email VARCHAR(50) NOT NULL, telefon VARCHAR(15) NOT NULL);
ALTER TABLE zamowienia ADD COLUMN klienci_id_klienta INT REFERENCES klienci(id_klienta);

INSERT INTO klienci(id_klienta, email, telefon)
VALUES
(1, 'biedronka@warszawa.pl', '133000999'),
(2, 'zabka@zaba.pl', '456452256'),
(3, 'eloelo@320.pl', '777112200'),
(4, 'nokia@nokia.pl', '665590444'),
(5, 'siema@elo.pl', '933654320'),
(6, 'byq@dziq.pl', '154325870');

UPDATE zamowienia SET klienci_id_klienta = 1 WHERE id_zamowienia IN (1, 2, 3, 4, 5, 6, 7);
UPDATE zamowienia SET klienci_id_klienta = 2 WHERE id_zamowienia IN (8, 9);
UPDATE zamowienia SET klienci_id_klienta = 4 WHERE id_zamowienia IN (10, 11, 12, 13, 14, 15, 16);
UPDATE zamowienia SET klienci_id_klienta = 5 WHERE id_zamowienia IN (17, 18);
UPDATE zamowienia SET klienci_id_klienta = 6 WHERE id_zamowienia IN (19, 20);
SELECT klienci.*, nazwa_produktu, ilosc, ilosc*cena AS wartosc_zamowienia FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu;
SELECT CONCAT('NAJRZADZIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(ilosc*cena)) FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta ORDER BY COUNT(id_zamowienia) LIMIT 1;	--- bez uwzwględnienia tych klientów, co nie mają żadnego zamówienia
SELECT CONCAT('NAJCZESCIEJ ZAMAWIAJACY: ', klienci.*, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(ilosc*cena)) FROM zamowienia RIGHT JOIN klienci ON klienci_id_klienta = id_klienta JOIN produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta ORDER BY COUNT(id_zamowienia) DESC LIMIT 1;
DELETE FROM produkty WHERE id_produktu IN (SELECT id_produktu FROM zamowienia RIGHT JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY id_produktu HAVING COUNT(id_zamowienia) = 0);

13.
CREATE TABLE numer(liczba INT CHECK(liczba BETWEEN 0 AND 9999));
CREATE SEQUENCE liczba_seq START WITH 100 INCREMENT BY 5 MINVALUE 0 MAXVALUE 125 CYCLE;
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
ALTER SEQUENCE liczba_seq INCREMENT BY 6;
SELECT nextval('liczba_seq');
SELECT nextval('liczba_seq');
DROP SEQUENCE liczba_seq;

14.
\du
CREATE USER Superuser298264 SUPERUSER;
CREATE USER guest298264;
GRANT CONNECT ON DATABASE s298264cw2 TO guest298264;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO guest298264;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest298264;
\du
ALTER USER Superuser298264 RENAME TO student;
ALTER USER student WITH NOSUPERUSER;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO student;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;

15.
BEGIN;
UPDATE produkty SET cena = cena + CAST(10 AS MONEY);
COMMIT;

BEGIN;
UPDATE produkty SET cena = 1.1*cena WHERE id_produktu = 3;
SAVEPOINT S1;
UPDATE zamowienia SET liczba_sztuk = 1.25*liczba_sztuk;
SAVEPOINT S2;
DELETE FROM klienci WHERE id_klienta IN (SELECT id_klienta FROM klienci JOIN zamowienia ON id_klienta = klienci_id_klienta JOIN produkty ON id_produktu = produkty_id_produktu GROUP BY id_klienta ORDER BY SUM(cena*ilosc) DESC LIMIT 1);
ROLLBACK TO S1;
ROLLBACK TO S2;
ROLLBACK;
COMMIT;

CREATE OR REPLACE FUNCTION udzial()
RETURNS TABLE (procent text) AS
$func$
BEGIN
	RETURN QUERY
	SELECT CONCAT(nazwa_producenta, ': ', (COUNT(id_zamowienia) / CAST((SELECT COUNT(*) FROM zamowienia) AS FLOAT))*100, '%') FROM producenci JOIN produkty ON id_producenta = producenci_id_producenta JOIN zamowienia ON id_produktu = produkty_id_produktu GROUP BY (id_producenta);
END
$func$ LANGUAGE plpgsql;

SELECT udzial();




